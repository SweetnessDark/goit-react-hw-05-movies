{"version":3,"file":"static/js/544.46b62141.chunk.js","mappings":"iLACA,GAAgB,UAAY,6BAA6B,YAAc,+BAA+B,WAAa,+B,SCsCnH,EA/BkB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3B,OACE,gBAAKC,UAAU,YAAf,UACE,eAAIA,UAAWC,EAAAA,UAAf,SACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAeC,EAA7B,EAA6BA,YAA7B,OACV,eAAIN,UAAWC,EAAAA,UAAf,UACE,UAAC,KAAD,CAAMM,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMV,GAA1C,WACE,gBACEC,UAAWC,EAAAA,YACXS,IAAKJ,EAbL,mCAa2BK,OAAOL,GAXhD,kHAYcM,IAAI,MAEN,cAAGZ,UAAWC,EAAAA,WAAd,gBAAgCG,QAAhC,IAAgCA,EAAAA,EAASC,QAPTF,EAD1B,OAenB,C,sFCWD,UAjCa,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACMjB,GAAWkB,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACRF,GAAa,IAEbG,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJP,EAAUO,EAASC,QACpB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAI,aAAcF,EAC3B,IACAG,SAAQ,WACPX,GAAa,EACd,GACJ,GAAE,KAGD,gCACGD,IAAa,uCACbjB,EAAO8B,OAAS,IACf,iBAAK5B,UAAU,YAAf,WACE,4CACA,SAAC,IAAD,CAAWF,OAAQA,EAAQC,SAAUA,SAK9C,C,+LClCK8B,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAGjBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMf,EAAiB,mCAAG,sGACRe,EAAAA,EAAAA,IAAA,4BAA+BL,IADvB,uBACvBM,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBC,EAAS,mCAAG,WAAMC,GAAN,yFACAH,EAAAA,EAAAA,IAAA,wBACJL,EADI,kBACkBQ,IAFlB,uBACfF,EADe,EACfA,KADe,kBAIhBA,EAAKb,SAJW,2CAAH,sDAOTgB,EAAgB,mCAAG,WAAMnC,GAAN,yFACP+B,EAAAA,EAAAA,IAAA,iBAAoB/B,EAApB,YAA0B0B,IADnB,uBACtBM,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBI,EAAY,mCAAG,WAAMpC,GAAN,yFACH+B,EAAAA,EAAAA,IAAA,iBAAoB/B,EAApB,oBAAkC0B,IAD/B,uBAClBM,EADkB,EAClBA,KADkB,kBAEnBA,EAAKK,MAFc,2CAAH,sDAKZC,EAAe,mCAAG,WAAMtC,GAAN,yFACN+B,EAAAA,EAAAA,IAAA,iBAAoB/B,EAApB,oBAAkC0B,IAD5B,uBACrBM,EADqB,EACrBA,KADqB,kBAEtBA,EAAKb,SAFiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.scss?f9f6","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/apiMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__pH29x\",\"posterMovie\":\"MovieList_posterMovie__vcP+F\",\"titleMovie\":\"MovieList_titleMovie__IXhGj\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport sass from './MovieList.module.scss';\n\nconst baseImg = 'https://image.tmdb.org/t/p/w500/';\nconst imgNotFound =\n  'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <div className=\"container\">\n      <ul className={sass.movieList}>\n        {movies.map(({ id, title, original_name, poster_path }) => (\n          <li className={sass.movieItem} key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                className={sass.posterMovie}\n                src={poster_path ? baseImg.concat(poster_path) : imgNotFound}\n                alt=\"\"\n              />\n              <p className={sass.titleMovie}>{title ?? original_name}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n    })\n  ),\n  location: PropTypes.object,\n};\n\nexport default MovieList;\n","import { getTrendingMovies } from 'services/apiMovies';\nimport { useEffect, useState } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTrendingMovies()\n      .then(response => {\n        setMovies(response.results);\n      })\n      .catch(error => {\n        console.log('error :>> ', error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      {isLoading && <h2>Loading...</h2>}\n      {movies.length > 0 && (\n        <div className=\"container\">\n          <h1>Trending Today</h1>\n          <MovieList movies={movies} location={location} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: '334a07dbaaf512194560b403a0d27f31',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?${searchParams}`);\n  return data;\n};\n\nexport const getMovies = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n  return data.results;\n};\n\nexport const getMoviesDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n  return data;\n};\n\nexport const getCastMovie = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?${searchParams}`);\n  return data.cast;\n};\n\nexport const getReviewsMovie = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?${searchParams}`);\n  return data.results;\n};\n"],"names":["movies","location","className","sass","map","id","title","original_name","poster_path","to","state","from","src","concat","alt","useState","setMovies","isLoading","setIsLoading","useLocation","useEffect","getTrendingMovies","then","response","results","catch","error","console","log","finally","length","searchParams","URLSearchParams","api_key","language","include_adult","axios","data","getMovies","name","getMoviesDetails","getCastMovie","cast","getReviewsMovie"],"sourceRoot":""}